{"version":3,"sources":["Components/FormList.js","Components/Items.js","App.js","reportWebVitals.js","index.js"],"names":["FormList","useState","userId","setUserId","id","setId","title","setTitle","body","setBody","name","type","value","placeholder","onChange","e","target","onClick","allItem","axios","post","then","res","console","log","data","catch","err","Items","setValue","loading","setLoading","useEffect","get","skilsBar","map","item","loadingrender","className","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGe,SAASA,IAAY,IAAD,EAEHC,mBAAS,GAFN,mBAExBC,EAFwB,KAEhBC,EAFgB,OAGXF,mBAAS,GAHE,mBAGxBG,EAHwB,KAGpBC,EAHoB,OAILJ,mBAAS,IAJJ,mBAIxBK,EAJwB,KAIjBC,EAJiB,OAKPN,mBAAS,IALF,mBAKxBO,EALwB,KAKlBC,EALkB,KAyB/B,OACI,gCACI,uBAAOC,KAAK,SAASC,KAAK,SAASC,MAAOV,EAAQW,YAAY,UAAUC,SApB3D,SAACC,GAAOZ,EAAUY,EAAEC,OAAOJ,UAqBxC,uBAAOF,KAAK,KAAKC,KAAK,SAASG,SApBtB,SAACC,GAAOV,EAAMU,EAAEC,OAAOJ,QAoBmBA,MAAOR,EAAIS,YAAY,OAC1E,uBAAOH,KAAK,QAAQC,KAAK,OAAOG,SApBpB,SAACC,GAAOR,EAASQ,EAAEC,OAAOJ,QAoBiBA,MAAON,EAAOO,YAAY,UACjF,uBAAOH,KAAK,OAAOC,KAAK,OAAOG,SApBpB,SAACC,GAAON,EAAQM,EAAEC,OAAOJ,QAoBiBA,MAAOJ,EAAMK,YAAY,SAC9E,wBAAQI,QAnBA,WACZ,IAAMC,EAAU,CAAChB,OAAQA,EAAQE,GAAIA,EAAIE,MAAOA,EAAOE,KAAMA,GAC7DW,IAAMC,KAAN,6CAAyDF,GACpDG,MAAK,SAAAC,GACFC,QAAQC,IAAI,MAAOF,EAAIG,SAE1BC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,MAAOG,MAE3BJ,QAAQC,IAAIN,IAUR,yBCWGU,MA3Cf,WAAkB,IAAD,EAIU3B,mBAAS,IAJnB,mBAIVW,EAJU,KAIHiB,EAJG,OAKc5B,oBAAS,GALvB,mBAKV6B,EALU,KAKDC,EALC,KAQjBC,qBAAU,WACRb,IAAMc,IAAI,8CACTZ,MAAK,SAAAC,GAAG,OAAIO,EAASP,EAAIG,SACzBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,WAAYG,MAE5BI,GAAW,KACV,IAEH,IAAMG,EAAWtB,EAAMuB,KAAK,SAAAC,GACxB,OACI,gCACI,8BAAIA,EAAKhC,GAAT,OAAiBgC,EAAK9B,SACtB,yBAFM8B,EAAKhC,OASjBiC,EACE,8BACI,4CAMV,OACE,qBAAKC,UAAU,MAAf,UACiB,IAAZR,EAAkB,mCAAGI,IAAc,yCAAIG,QC3BjCE,MAVf,WAEE,OACE,sBAAKD,UAAU,MAAf,UACC,cAACtC,EAAD,IACA,cAAC,EAAD,QCIUwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6254ad2.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function FormList() {\r\n    \r\n    const [userId, setUserId] = useState(0)\r\n    const [id, setId] = useState(0)\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n\r\n    const handelUserId = (e) => {setUserId(e.target.value)}\r\n    const handelId = (e) => {setId(e.target.value)}\r\n    const handelTitle = (e) => {setTitle(e.target.value)}\r\n    const handelBody = (e) => {setBody(e.target.value)}\r\n\r\n    const addItem = () => {\r\n        const allItem = {userId: userId, id: id, title: title, body: body}\r\n        axios.post(`https://jsonplaceholder.typicode.com/posts`, allItem)\r\n            .then(res => {\r\n                console.log(\"res\", res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log('err', err);\r\n            })\r\n        console.log(allItem);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input name='userId' type='number' value={userId} placeholder='user id' onChange={handelUserId} />\r\n            <input name='id' type='number' onChange={handelId} value={id} placeholder='id'/>\r\n            <input name='title' type='text' onChange={handelTitle} value={title} placeholder='Title' />\r\n            <input name='body' type='text' onChange={handelBody} value={body} placeholder='body' />\r\n            <button onClick={addItem}>Add Item</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n ","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nfunction Items() {\r\n\r\n  \r\n\r\nconst [value, setValue] =  useState([])\r\nconst [loading, setLoading] =  useState(false)\r\n    \r\n\r\nuseEffect(() => {\r\n  axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n  .then(res => setValue(res.data))\r\n  .catch(err => {\r\n      console.log(\"Err test\", err);\r\n  }) \r\n  setLoading(true)\r\n}, [] )\r\n\r\nconst skilsBar = value.map( item => {\r\n    return(\r\n        <div key={item.id} >\r\n            <p>{item.id} || {item.title}</p>     \r\n            <hr />\r\n        </div>\r\n    )\r\n\r\n    \r\n} )\r\n\r\nconst loadingrender =  (\r\n        <div>\r\n            <h1>Loading </h1>\r\n        </div>\r\n)\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n        {loading === true? <>{skilsBar}</>: <> {loadingrender}</>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Items;\r\n","import './App.css';\nimport FormList from './Components/FormList';\nimport Items from './Components/Items';\nfunction App() {\n\n  return (\n    <div className=\"App\">\n     <FormList />\n     <Items />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}